
CREATE DATABASE CUSTOMER_ORDER_PRODUCTS
USE CUSTOMER_ORDER_PRODUCTS

CREATE TABLE CUSTOMERS 
(
CUSTOMER_ID INT PRIMARY KEY,
CUSTOMER_NAME VARCHAR (50),
EMAIL VARCHAR (100)
)

INSERT INTO CUSTOMERS VALUES (1, 'John Doe', 'johndoe@example.com')
INSERT INTO CUSTOMERS VALUES  (2, 'Jane Smith', 'janesmith@example.com')
 INSERT INTO CUSTOMERS VALUES (3, 'Robert Johnson', 'robertjohnson@example.com')
 INSERT INTO CUSTOMERS VALUES (4, 'Emily Brown', 'emilybrown@example.com')
 INSERT INTO CUSTOMERS VALUES (5, 'Michael Davis', 'michaeldavis@example.com')
 INSERT INTO CUSTOMERS VALUES (6, 'Sarah Wilson', 'sarahwilson@example.com')
 INSERT INTO CUSTOMERS VALUES (7, 'David Thompson', 'davidthompson@example.com')
 INSERT INTO CUSTOMERS VALUES (8, 'Jessica Lee', 'jessicalee@example.com')
  INSERT INTO CUSTOMERS VALUES (9, 'William Turner', 'williamturner@example.com')
  INSERT INTO CUSTOMERS VALUES  (10, 'Olivia Martinez', 'oliviamartinez@example.com')

  SELECT*FROM CUSTOMERS

CREATE TABLE ORDERS 
(
ORDER_ID INT PRIMARY KEY ,
CUSTOMER_ID INT,
PRODUCT_NAME VARCHAR (100),
ORDER_DATE DATE , 
QUANTITY INT
)

INSERT INTO ORDERS VALUES  (1, 1, 'Product A', '2023-07-01', 5)
INSERT INTO ORDERS VALUES (2, 2, 'Product B', '2023-07-02', 3)
INSERT INTO ORDERS VALUES (3, 3, 'Product C', '2023-07-03', 2)
INSERT INTO ORDERS VALUES (4, 4, 'Product A', '2023-07-04', 1)
INSERT INTO ORDERS VALUES (5, 5, 'Product B', '2023-07-05', 4)
INSERT INTO ORDERS VALUES(6, 6, 'Product C', '2023-07-06', 2)
INSERT INTO ORDERS VALUES(7, 7, 'Product A', '2023-07-07', 3)
INSERT INTO ORDERS VALUES(8, 8, 'Product B', '2023-07-08', 2)
INSERT INTO ORDERS VALUES(9, 9, 'Product C', '2023-07-09', 5)
INSERT INTO ORDERS VALUES (10, 10, 'Product A', '2023-07-10', 1)

SELECT * FROM ORDERS


CREATE TABLE PRODUCTS 
(
PRODUCT_ID INT PRIMARY KEY ,
PRODUCT_NAME VARCHAR (100),
PRICE DECIMAL (10,2)
)

INSERT INTO PRODUCTS VALUES   (1, 'Product A', 10.99)
INSERT INTO PRODUCTS VALUES   (2, 'Product B', 8.99)
 INSERT INTO PRODUCTS VALUES  (3, 'Product C', 5.99)
INSERT INTO PRODUCTS VALUES   (4, 'Product D', 12.99)
 INSERT INTO PRODUCTS VALUES  (5, 'Product E', 7.99)
 INSERT INTO PRODUCTS VALUES  (6, 'Product F', 6.99)
  INSERT INTO PRODUCTS VALUES (7, 'Product G', 9.99)
 INSERT INTO PRODUCTS VALUES  (8, 'Product H', 11.99)
  INSERT INTO PRODUCTS VALUES (9, 'Product I', 14.99)
  INSERT INTO PRODUCTS VALUES (10, 'Product J', 4.99)

  -----------------------------------

  SELECT*FROM CUSTOMERS
------------------------------------
SELECT CUSTOMER_NAME , EMAIL 
FROM CUSTOMERS
WHERE EMAIL LIKE 'J%'
-------------------------------

SELECT ORDER_ID,PRODUCT_NAME,QUANTITY
FROM ORDERS
-------------------------------------

SELECT SUM ( QUANTITY) AS TOTAL_QANTITY_ORDERD
FROM ORDERS
-------------------------------------
SELECT CUSTOMER_NAME 
FROM CUSTOMERS C 
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
-----------------------------
SELECT * FROM PRODUCTS

SELECT PRODUCT_NAME,PRICE
FROM PRODUCTS
WHERE PRICE > 10
-------------------------
SELECT*FROM CUSTOMERS
SELECT * FROM ORDERS

SELECT C.CUSTOMER_NAME , O.ORDER_DATE 
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE O.ORDER_DATE >= '2023-07-05' 

-------------------------------------
SELECT AVG(PRICE)AS PRICE_OF_ALL_PRODUCT 
FROM PRODUCTS
  
  --------------------------------
 
  SELECT C.CUSTOMER_NAME, SUM(O.QUANTITY) AS TOTAL_QUANTITY
FROM CUSTOMERS C
JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
GROUP BY CUSTOMER_NAME;
-------------------------------------
SELECT P.PRODUCT_ID, P.PRODUCT_NAME, P.PRICE
FROM PRODUCTS P
LEFT JOIN ORDERS O ON P.PRODUCT_NAME = O.PRODUCT_NAME
WHERE O.PRODUCT_NAME IS NULL;

--------------------------------------------------

SELECT TOP 5 CUSTOMERS.CUSTOMER_ID, CUSTOMERS.CUSTOMER_NAME ,SUM (ORDERS.QUANTITY ) AS TOTAL_QUANTITY 
FROM CUSTOMERS
JOIN ORDERS ON CUSTOMERS.CUSTOMER_ID = ORDERS.CUSTOMER_ID
GROUP BY CUSTOMERS.CUSTOMER_ID, CUSTOMERS.CUSTOMER_NAME
ORDER BY TOTAL_QUANTITY DESC 
------------------------------------------------
SELECT P.PRICE , O.PRODUCT_NAME , AVG (P.PRICE) AS AVERAGE_PRICE
FROM ORDERS O 
JOIN PRODUCTS P ON O.ORDER_ID = P.PRODUCT_ID
GROUP BY P.PRICE , O.PRODUCT_NAME
------------------------------------
SELECT C.CUSTOMER_NAME , C.CUSTOMER_ID 
FROM CUSTOMERS C 
LEFT JOIN ORDERS O ON C.CUSTOMER_ID = O.CUSTOMER_ID
WHERE O.CUSTOMER_ID IS NULL 
---------------------------------------------
SELECT O.ORDER_ID,O.PRODUCT_NAME,O.QUANTITY 
FROM ORDERS O 
JOIN CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
WHERE C.CUSTOMER_NAME LIKE 'M%'
-------------------------------------
SELECT SUM ( P.PRICE * O.QUANTITY ) AS TOTAL_REVENUE 
FROM PRODUCTS P 
JOIN ORDERS O ON P. PRODUCT_ID = O.ORDER_ID
--------------------------------------------
SELECT C.CUSTOMER_NAME , SUM ( P.PRICE * O.QUANTITY ) AS TOTAL_REVENUE 
FROM PRODUCTS P 
JOIN ORDERS O ON P. PRODUCT_ID = O.ORDER_ID
JOIN CUSTOMERS C ON O.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY C.CUSTOMER_NAME
------------------------------------------------
SELECT TOP  3 PRODUCT_NAME , AVG (QUANTITY) AS AVERAGE_QUANTITTY 
FROM ORDERS
GROUP BY PRODUCT_NAME 
ORDER BY AVERAGE_QUANTITTY DESC 
------------------------------------------------------------
SELECT (COUNT(*) * 100.0) / (SELECT COUNT(*) FROM ORDERS) AS PERCENTAGE 
FROM ORDERS 
WHERE QUANTITY > (SELECT AVG(QUANTITY) FROM ORDERS)

---------------------------------------------------








SELECT*FROM CUSTOMERS
SELECT * FROM ORDERS
SELECT * FROM PRODUCTS